## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/logtest
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message":"Log gravado"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h3gc8Pk5a6af4Db6vVd1EZe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Faz o login do usuário.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email do usuário.'
        required: true
        example: joao@teste.com
        type: string
        custom: []
      password:
        name: password
        description: 'Senha do usuário.'
        required: true
        example: '123456'
        type: string
        custom: []
    cleanBodyParameters:
      email: joao@teste.com
      password: '123456'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Faz o logout do usuário.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vhkDacfP36a4V8b5Zdg6e1E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/refresh
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Atualiza o token do usuário.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fVP1kahdc36e48E5DgZvab6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/me
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retorna os dados do usuário logado.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DhcVdef6kbZP61va435E8ag'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/contacts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Busca todos os contatos do usuário logado com paginação.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ab86VvDdP6cEe3fgh1Z5ka4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/contacts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Insere um novo contato para o usuário logado.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nome do contato.'
        required: true
        example: João
        type: string
        custom: []
      second_name:
        name: second_name
        description: 'Must be at least 3 characters. Must not be greater than 100 characters.'
        required: false
        example: z
        type: string
        custom: []
      email:
        name: email
        description: 'Email do contato.'
        required: true
        example: joaosilva@teste.com
        type: string
        custom: []
      number:
        name: number
        description: 'Número do contato.'
        required: true
        example: (11)999999999
        type: string
        custom: []
      image:
        name: image
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        custom: []
      secondName:
        name: secondName
        description: 'Nome do contato.'
        required: false
        example: Silva
        type: string
        custom: []
    cleanBodyParameters:
      name: João
      second_name: z
      email: joaosilva@teste.com
      number: (11)999999999
      secondName: Silva
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 86k4dbevgEZ3VPfcha61aD5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/contacts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Busca um contato do usuário logado.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the contact.'
        required: true
        example: eveniet
        type: string
        custom: []
    cleanUrlParameters:
      id: eveniet
    queryParameters:
      id:
        name: id
        description: 'Id do contato.'
        required: true
        example: ecd4f3ff-7e8d-4358-ac74-f997955c7c86
        type: string
        custom: []
    cleanQueryParameters:
      id: ecd4f3ff-7e8d-4358-ac74-f997955c7c86
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hf36eZ1vk5dEPgcDV46aa8b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/contacts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Atualiza um contato do usuário logado.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the contact.'
        required: true
        example: vel
        type: string
        custom: []
    cleanUrlParameters:
      id: vel
    queryParameters:
      id:
        name: id
        description: 'Id do contato.'
        required: true
        example: ecd4f3ff-7e8d-4358-ac74-f997955c7c86
        type: string
        custom: []
    cleanQueryParameters:
      id: ecd4f3ff-7e8d-4358-ac74-f997955c7c86
    bodyParameters:
      name:
        name: name
        description: 'Nome do contato.'
        required: false
        example: João
        type: string
        custom: []
      secondName:
        name: secondName
        description: 'Nome do contato.'
        required: false
        example: Silva
        type: string
        custom: []
      email:
        name: email
        description: 'Email do contato.'
        required: false
        example: joaosilva@teste.com
        type: string
        custom: []
      number:
        name: number
        description: 'Número do contato.'
        required: false
        example: (11)999999999
        type: string
        custom: []
    cleanBodyParameters:
      name: João
      secondName: Silva
      email: joaosilva@teste.com
      number: (11)999999999
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gaVfEhc663D5bak8Ze1P4vd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/contacts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Deleta um contato do usuário logado.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the contact.'
        required: true
        example: porro
        type: string
        custom: []
    cleanUrlParameters:
      id: porro
    queryParameters:
      id:
        name: id
        description: 'Id do contato.'
        required: true
        example: ecd4f3ff-7e8d-4358-ac74-f997955c7c86
        type: string
        custom: []
    cleanQueryParameters:
      id: ecd4f3ff-7e8d-4358-ac74-f997955c7c86
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 65vadaeb6E8gZ3P4hc1DkVf'
    controller: null
    method: null
    route: null
    custom: []
